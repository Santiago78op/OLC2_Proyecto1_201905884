// Code generated from grammar/VLangLexer.g4 by ANTLR 4.13.2. DO NOT EDIT.

package compiler

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type VLangLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var VLangLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func vlanglexerLexerInit() {
	staticData := &VLangLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'mut'", "'fn'", "'struct'", "'slice'", "'if'", "'else'", "'switch'",
		"'case'", "'default'", "'for'", "'while'", "'in'", "'break'", "'continue'",
		"'return'", "'+'", "'-'", "'*'", "'/'", "'%'", "':='", "'='", "'+='",
		"'-='", "'=='", "'!='", "'<'", "'<='", "'>'", "'>='", "'&&'", "'||'",
		"'!'", "'('", "')'", "'{'", "'}'", "'['", "']'", "';'", "':'", "'.'",
		"','", "", "", "", "", "'nil'",
	}
	staticData.SymbolicNames = []string{
		"", "MUT", "FUNC", "STR", "SLICE_TYPE", "IF_KW", "ELSE_KW", "SWITCH_KW",
		"CASE_KW", "DEFAULT_KW", "FOR_KW", "WHILE_KW", "IN_KW", "BREAK_KW",
		"CONTINUE_KW", "RETURN_KW", "PLUS", "MINUS", "MULT", "DIV", "MOD", "DEFINE",
		"ASSIGN", "PLUS_ASSIGN", "MINUS_ASSIGN", "EQ", "NE", "LT", "LE", "GT",
		"GE", "AND", "OR", "NOT", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACK",
		"RBRACK", "SEMI", "COLON", "DOT", "COMMA", "INT_LITERAL", "FLOAT_LITERAL",
		"STRING_LITERAL", "BOOL_LITERAL", "NIL_LITERAL", "ID", "WS", "LINE_COMMENT",
		"BLOCK_COMMENT",
	}
	staticData.RuleNames = []string{
		"MUT", "FUNC", "STR", "SLICE_TYPE", "IF_KW", "ELSE_KW", "SWITCH_KW",
		"CASE_KW", "DEFAULT_KW", "FOR_KW", "WHILE_KW", "IN_KW", "BREAK_KW",
		"CONTINUE_KW", "RETURN_KW", "PLUS", "MINUS", "MULT", "DIV", "MOD", "DEFINE",
		"ASSIGN", "PLUS_ASSIGN", "MINUS_ASSIGN", "EQ", "NE", "LT", "LE", "GT",
		"GE", "AND", "OR", "NOT", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACK",
		"RBRACK", "SEMI", "COLON", "DOT", "COMMA", "DIGIT", "LETTER", "UNDERSCORE",
		"INT_LITERAL", "FLOAT_LITERAL", "STRING_LITERAL", "BOOL_LITERAL", "NIL_LITERAL",
		"ID", "ESC_SEQ", "WS", "LINE_COMMENT", "BLOCK_COMMENT",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 52, 355, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 1, 0, 1, 0, 1, 0,
		1, 0, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3,
		1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5,
		1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7,
		1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9,
		1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1,
		12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13,
		1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1,
		14, 1, 15, 1, 15, 1, 16, 1, 16, 1, 17, 1, 17, 1, 18, 1, 18, 1, 19, 1, 19,
		1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1,
		23, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 27, 1, 27,
		1, 27, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 30, 1, 31, 1,
		31, 1, 31, 1, 32, 1, 32, 1, 33, 1, 33, 1, 34, 1, 34, 1, 35, 1, 35, 1, 36,
		1, 36, 1, 37, 1, 37, 1, 38, 1, 38, 1, 39, 1, 39, 1, 40, 1, 40, 1, 41, 1,
		41, 1, 42, 1, 42, 1, 43, 1, 43, 1, 44, 1, 44, 1, 45, 1, 45, 1, 46, 4, 46,
		269, 8, 46, 11, 46, 12, 46, 270, 1, 47, 4, 47, 274, 8, 47, 11, 47, 12,
		47, 275, 1, 47, 1, 47, 4, 47, 280, 8, 47, 11, 47, 12, 47, 281, 1, 48, 1,
		48, 1, 48, 5, 48, 287, 8, 48, 10, 48, 12, 48, 290, 9, 48, 1, 48, 1, 48,
		1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 3, 49, 303,
		8, 49, 1, 50, 1, 50, 1, 50, 1, 50, 1, 51, 1, 51, 3, 51, 311, 8, 51, 1,
		51, 1, 51, 1, 51, 5, 51, 316, 8, 51, 10, 51, 12, 51, 319, 9, 51, 1, 52,
		1, 52, 1, 52, 1, 53, 4, 53, 325, 8, 53, 11, 53, 12, 53, 326, 1, 53, 1,
		53, 1, 54, 1, 54, 1, 54, 1, 54, 5, 54, 335, 8, 54, 10, 54, 12, 54, 338,
		9, 54, 1, 54, 1, 54, 1, 55, 1, 55, 1, 55, 1, 55, 5, 55, 346, 8, 55, 10,
		55, 12, 55, 349, 9, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 347, 0, 56,
		1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11,
		23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20,
		41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29,
		59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38,
		77, 39, 79, 40, 81, 41, 83, 42, 85, 43, 87, 0, 89, 0, 91, 0, 93, 44, 95,
		45, 97, 46, 99, 47, 101, 48, 103, 49, 105, 0, 107, 50, 109, 51, 111, 52,
		1, 0, 6, 1, 0, 48, 57, 2, 0, 65, 90, 97, 122, 4, 0, 10, 10, 13, 13, 34,
		34, 92, 92, 8, 0, 34, 34, 39, 39, 92, 92, 98, 98, 102, 102, 110, 110, 114,
		114, 116, 116, 3, 0, 9, 10, 13, 13, 32, 32, 2, 0, 10, 10, 13, 13, 363,
		0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0,
		0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0,
		0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0,
		0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1,
		0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39,
		1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0,
		47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0,
		0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0,
		0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0,
		0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1,
		0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85,
		1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0, 0, 97, 1, 0, 0, 0, 0,
		99, 1, 0, 0, 0, 0, 101, 1, 0, 0, 0, 0, 103, 1, 0, 0, 0, 0, 107, 1, 0, 0,
		0, 0, 109, 1, 0, 0, 0, 0, 111, 1, 0, 0, 0, 1, 113, 1, 0, 0, 0, 3, 117,
		1, 0, 0, 0, 5, 120, 1, 0, 0, 0, 7, 127, 1, 0, 0, 0, 9, 133, 1, 0, 0, 0,
		11, 136, 1, 0, 0, 0, 13, 141, 1, 0, 0, 0, 15, 148, 1, 0, 0, 0, 17, 153,
		1, 0, 0, 0, 19, 161, 1, 0, 0, 0, 21, 165, 1, 0, 0, 0, 23, 171, 1, 0, 0,
		0, 25, 174, 1, 0, 0, 0, 27, 180, 1, 0, 0, 0, 29, 189, 1, 0, 0, 0, 31, 196,
		1, 0, 0, 0, 33, 198, 1, 0, 0, 0, 35, 200, 1, 0, 0, 0, 37, 202, 1, 0, 0,
		0, 39, 204, 1, 0, 0, 0, 41, 206, 1, 0, 0, 0, 43, 209, 1, 0, 0, 0, 45, 211,
		1, 0, 0, 0, 47, 214, 1, 0, 0, 0, 49, 217, 1, 0, 0, 0, 51, 220, 1, 0, 0,
		0, 53, 223, 1, 0, 0, 0, 55, 225, 1, 0, 0, 0, 57, 228, 1, 0, 0, 0, 59, 230,
		1, 0, 0, 0, 61, 233, 1, 0, 0, 0, 63, 236, 1, 0, 0, 0, 65, 239, 1, 0, 0,
		0, 67, 241, 1, 0, 0, 0, 69, 243, 1, 0, 0, 0, 71, 245, 1, 0, 0, 0, 73, 247,
		1, 0, 0, 0, 75, 249, 1, 0, 0, 0, 77, 251, 1, 0, 0, 0, 79, 253, 1, 0, 0,
		0, 81, 255, 1, 0, 0, 0, 83, 257, 1, 0, 0, 0, 85, 259, 1, 0, 0, 0, 87, 261,
		1, 0, 0, 0, 89, 263, 1, 0, 0, 0, 91, 265, 1, 0, 0, 0, 93, 268, 1, 0, 0,
		0, 95, 273, 1, 0, 0, 0, 97, 283, 1, 0, 0, 0, 99, 302, 1, 0, 0, 0, 101,
		304, 1, 0, 0, 0, 103, 310, 1, 0, 0, 0, 105, 320, 1, 0, 0, 0, 107, 324,
		1, 0, 0, 0, 109, 330, 1, 0, 0, 0, 111, 341, 1, 0, 0, 0, 113, 114, 5, 109,
		0, 0, 114, 115, 5, 117, 0, 0, 115, 116, 5, 116, 0, 0, 116, 2, 1, 0, 0,
		0, 117, 118, 5, 102, 0, 0, 118, 119, 5, 110, 0, 0, 119, 4, 1, 0, 0, 0,
		120, 121, 5, 115, 0, 0, 121, 122, 5, 116, 0, 0, 122, 123, 5, 114, 0, 0,
		123, 124, 5, 117, 0, 0, 124, 125, 5, 99, 0, 0, 125, 126, 5, 116, 0, 0,
		126, 6, 1, 0, 0, 0, 127, 128, 5, 115, 0, 0, 128, 129, 5, 108, 0, 0, 129,
		130, 5, 105, 0, 0, 130, 131, 5, 99, 0, 0, 131, 132, 5, 101, 0, 0, 132,
		8, 1, 0, 0, 0, 133, 134, 5, 105, 0, 0, 134, 135, 5, 102, 0, 0, 135, 10,
		1, 0, 0, 0, 136, 137, 5, 101, 0, 0, 137, 138, 5, 108, 0, 0, 138, 139, 5,
		115, 0, 0, 139, 140, 5, 101, 0, 0, 140, 12, 1, 0, 0, 0, 141, 142, 5, 115,
		0, 0, 142, 143, 5, 119, 0, 0, 143, 144, 5, 105, 0, 0, 144, 145, 5, 116,
		0, 0, 145, 146, 5, 99, 0, 0, 146, 147, 5, 104, 0, 0, 147, 14, 1, 0, 0,
		0, 148, 149, 5, 99, 0, 0, 149, 150, 5, 97, 0, 0, 150, 151, 5, 115, 0, 0,
		151, 152, 5, 101, 0, 0, 152, 16, 1, 0, 0, 0, 153, 154, 5, 100, 0, 0, 154,
		155, 5, 101, 0, 0, 155, 156, 5, 102, 0, 0, 156, 157, 5, 97, 0, 0, 157,
		158, 5, 117, 0, 0, 158, 159, 5, 108, 0, 0, 159, 160, 5, 116, 0, 0, 160,
		18, 1, 0, 0, 0, 161, 162, 5, 102, 0, 0, 162, 163, 5, 111, 0, 0, 163, 164,
		5, 114, 0, 0, 164, 20, 1, 0, 0, 0, 165, 166, 5, 119, 0, 0, 166, 167, 5,
		104, 0, 0, 167, 168, 5, 105, 0, 0, 168, 169, 5, 108, 0, 0, 169, 170, 5,
		101, 0, 0, 170, 22, 1, 0, 0, 0, 171, 172, 5, 105, 0, 0, 172, 173, 5, 110,
		0, 0, 173, 24, 1, 0, 0, 0, 174, 175, 5, 98, 0, 0, 175, 176, 5, 114, 0,
		0, 176, 177, 5, 101, 0, 0, 177, 178, 5, 97, 0, 0, 178, 179, 5, 107, 0,
		0, 179, 26, 1, 0, 0, 0, 180, 181, 5, 99, 0, 0, 181, 182, 5, 111, 0, 0,
		182, 183, 5, 110, 0, 0, 183, 184, 5, 116, 0, 0, 184, 185, 5, 105, 0, 0,
		185, 186, 5, 110, 0, 0, 186, 187, 5, 117, 0, 0, 187, 188, 5, 101, 0, 0,
		188, 28, 1, 0, 0, 0, 189, 190, 5, 114, 0, 0, 190, 191, 5, 101, 0, 0, 191,
		192, 5, 116, 0, 0, 192, 193, 5, 117, 0, 0, 193, 194, 5, 114, 0, 0, 194,
		195, 5, 110, 0, 0, 195, 30, 1, 0, 0, 0, 196, 197, 5, 43, 0, 0, 197, 32,
		1, 0, 0, 0, 198, 199, 5, 45, 0, 0, 199, 34, 1, 0, 0, 0, 200, 201, 5, 42,
		0, 0, 201, 36, 1, 0, 0, 0, 202, 203, 5, 47, 0, 0, 203, 38, 1, 0, 0, 0,
		204, 205, 5, 37, 0, 0, 205, 40, 1, 0, 0, 0, 206, 207, 5, 58, 0, 0, 207,
		208, 5, 61, 0, 0, 208, 42, 1, 0, 0, 0, 209, 210, 5, 61, 0, 0, 210, 44,
		1, 0, 0, 0, 211, 212, 5, 43, 0, 0, 212, 213, 5, 61, 0, 0, 213, 46, 1, 0,
		0, 0, 214, 215, 5, 45, 0, 0, 215, 216, 5, 61, 0, 0, 216, 48, 1, 0, 0, 0,
		217, 218, 5, 61, 0, 0, 218, 219, 5, 61, 0, 0, 219, 50, 1, 0, 0, 0, 220,
		221, 5, 33, 0, 0, 221, 222, 5, 61, 0, 0, 222, 52, 1, 0, 0, 0, 223, 224,
		5, 60, 0, 0, 224, 54, 1, 0, 0, 0, 225, 226, 5, 60, 0, 0, 226, 227, 5, 61,
		0, 0, 227, 56, 1, 0, 0, 0, 228, 229, 5, 62, 0, 0, 229, 58, 1, 0, 0, 0,
		230, 231, 5, 62, 0, 0, 231, 232, 5, 61, 0, 0, 232, 60, 1, 0, 0, 0, 233,
		234, 5, 38, 0, 0, 234, 235, 5, 38, 0, 0, 235, 62, 1, 0, 0, 0, 236, 237,
		5, 124, 0, 0, 237, 238, 5, 124, 0, 0, 238, 64, 1, 0, 0, 0, 239, 240, 5,
		33, 0, 0, 240, 66, 1, 0, 0, 0, 241, 242, 5, 40, 0, 0, 242, 68, 1, 0, 0,
		0, 243, 244, 5, 41, 0, 0, 244, 70, 1, 0, 0, 0, 245, 246, 5, 123, 0, 0,
		246, 72, 1, 0, 0, 0, 247, 248, 5, 125, 0, 0, 248, 74, 1, 0, 0, 0, 249,
		250, 5, 91, 0, 0, 250, 76, 1, 0, 0, 0, 251, 252, 5, 93, 0, 0, 252, 78,
		1, 0, 0, 0, 253, 254, 5, 59, 0, 0, 254, 80, 1, 0, 0, 0, 255, 256, 5, 58,
		0, 0, 256, 82, 1, 0, 0, 0, 257, 258, 5, 46, 0, 0, 258, 84, 1, 0, 0, 0,
		259, 260, 5, 44, 0, 0, 260, 86, 1, 0, 0, 0, 261, 262, 7, 0, 0, 0, 262,
		88, 1, 0, 0, 0, 263, 264, 7, 1, 0, 0, 264, 90, 1, 0, 0, 0, 265, 266, 5,
		95, 0, 0, 266, 92, 1, 0, 0, 0, 267, 269, 3, 87, 43, 0, 268, 267, 1, 0,
		0, 0, 269, 270, 1, 0, 0, 0, 270, 268, 1, 0, 0, 0, 270, 271, 1, 0, 0, 0,
		271, 94, 1, 0, 0, 0, 272, 274, 3, 87, 43, 0, 273, 272, 1, 0, 0, 0, 274,
		275, 1, 0, 0, 0, 275, 273, 1, 0, 0, 0, 275, 276, 1, 0, 0, 0, 276, 277,
		1, 0, 0, 0, 277, 279, 5, 46, 0, 0, 278, 280, 3, 87, 43, 0, 279, 278, 1,
		0, 0, 0, 280, 281, 1, 0, 0, 0, 281, 279, 1, 0, 0, 0, 281, 282, 1, 0, 0,
		0, 282, 96, 1, 0, 0, 0, 283, 288, 5, 34, 0, 0, 284, 287, 8, 2, 0, 0, 285,
		287, 3, 105, 52, 0, 286, 284, 1, 0, 0, 0, 286, 285, 1, 0, 0, 0, 287, 290,
		1, 0, 0, 0, 288, 286, 1, 0, 0, 0, 288, 289, 1, 0, 0, 0, 289, 291, 1, 0,
		0, 0, 290, 288, 1, 0, 0, 0, 291, 292, 5, 34, 0, 0, 292, 98, 1, 0, 0, 0,
		293, 294, 5, 116, 0, 0, 294, 295, 5, 114, 0, 0, 295, 296, 5, 117, 0, 0,
		296, 303, 5, 101, 0, 0, 297, 298, 5, 102, 0, 0, 298, 299, 5, 97, 0, 0,
		299, 300, 5, 108, 0, 0, 300, 301, 5, 115, 0, 0, 301, 303, 5, 101, 0, 0,
		302, 293, 1, 0, 0, 0, 302, 297, 1, 0, 0, 0, 303, 100, 1, 0, 0, 0, 304,
		305, 5, 110, 0, 0, 305, 306, 5, 105, 0, 0, 306, 307, 5, 108, 0, 0, 307,
		102, 1, 0, 0, 0, 308, 311, 3, 89, 44, 0, 309, 311, 3, 91, 45, 0, 310, 308,
		1, 0, 0, 0, 310, 309, 1, 0, 0, 0, 311, 317, 1, 0, 0, 0, 312, 316, 3, 89,
		44, 0, 313, 316, 3, 87, 43, 0, 314, 316, 3, 91, 45, 0, 315, 312, 1, 0,
		0, 0, 315, 313, 1, 0, 0, 0, 315, 314, 1, 0, 0, 0, 316, 319, 1, 0, 0, 0,
		317, 315, 1, 0, 0, 0, 317, 318, 1, 0, 0, 0, 318, 104, 1, 0, 0, 0, 319,
		317, 1, 0, 0, 0, 320, 321, 5, 92, 0, 0, 321, 322, 7, 3, 0, 0, 322, 106,
		1, 0, 0, 0, 323, 325, 7, 4, 0, 0, 324, 323, 1, 0, 0, 0, 325, 326, 1, 0,
		0, 0, 326, 324, 1, 0, 0, 0, 326, 327, 1, 0, 0, 0, 327, 328, 1, 0, 0, 0,
		328, 329, 6, 53, 0, 0, 329, 108, 1, 0, 0, 0, 330, 331, 5, 47, 0, 0, 331,
		332, 5, 47, 0, 0, 332, 336, 1, 0, 0, 0, 333, 335, 8, 5, 0, 0, 334, 333,
		1, 0, 0, 0, 335, 338, 1, 0, 0, 0, 336, 334, 1, 0, 0, 0, 336, 337, 1, 0,
		0, 0, 337, 339, 1, 0, 0, 0, 338, 336, 1, 0, 0, 0, 339, 340, 6, 54, 0, 0,
		340, 110, 1, 0, 0, 0, 341, 342, 5, 47, 0, 0, 342, 343, 5, 42, 0, 0, 343,
		347, 1, 0, 0, 0, 344, 346, 9, 0, 0, 0, 345, 344, 1, 0, 0, 0, 346, 349,
		1, 0, 0, 0, 347, 348, 1, 0, 0, 0, 347, 345, 1, 0, 0, 0, 348, 350, 1, 0,
		0, 0, 349, 347, 1, 0, 0, 0, 350, 351, 5, 42, 0, 0, 351, 352, 5, 47, 0,
		0, 352, 353, 1, 0, 0, 0, 353, 354, 6, 55, 0, 0, 354, 112, 1, 0, 0, 0, 13,
		0, 270, 275, 281, 286, 288, 302, 310, 315, 317, 326, 336, 347, 1, 6, 0,
		0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// VLangLexerInit initializes any static state used to implement VLangLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewVLangLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func VLangLexerInit() {
	staticData := &VLangLexerLexerStaticData
	staticData.once.Do(vlanglexerLexerInit)
}

// NewVLangLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewVLangLexer(input antlr.CharStream) *VLangLexer {
	VLangLexerInit()
	l := new(VLangLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &VLangLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "VLangLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// VLangLexer tokens.
const (
	VLangLexerMUT            = 1
	VLangLexerFUNC           = 2
	VLangLexerSTR            = 3
	VLangLexerSLICE_TYPE     = 4
	VLangLexerIF_KW          = 5
	VLangLexerELSE_KW        = 6
	VLangLexerSWITCH_KW      = 7
	VLangLexerCASE_KW        = 8
	VLangLexerDEFAULT_KW     = 9
	VLangLexerFOR_KW         = 10
	VLangLexerWHILE_KW       = 11
	VLangLexerIN_KW          = 12
	VLangLexerBREAK_KW       = 13
	VLangLexerCONTINUE_KW    = 14
	VLangLexerRETURN_KW      = 15
	VLangLexerPLUS           = 16
	VLangLexerMINUS          = 17
	VLangLexerMULT           = 18
	VLangLexerDIV            = 19
	VLangLexerMOD            = 20
	VLangLexerDEFINE         = 21
	VLangLexerASSIGN         = 22
	VLangLexerPLUS_ASSIGN    = 23
	VLangLexerMINUS_ASSIGN   = 24
	VLangLexerEQ             = 25
	VLangLexerNE             = 26
	VLangLexerLT             = 27
	VLangLexerLE             = 28
	VLangLexerGT             = 29
	VLangLexerGE             = 30
	VLangLexerAND            = 31
	VLangLexerOR             = 32
	VLangLexerNOT            = 33
	VLangLexerLPAREN         = 34
	VLangLexerRPAREN         = 35
	VLangLexerLBRACE         = 36
	VLangLexerRBRACE         = 37
	VLangLexerLBRACK         = 38
	VLangLexerRBRACK         = 39
	VLangLexerSEMI           = 40
	VLangLexerCOLON          = 41
	VLangLexerDOT            = 42
	VLangLexerCOMMA          = 43
	VLangLexerINT_LITERAL    = 44
	VLangLexerFLOAT_LITERAL  = 45
	VLangLexerSTRING_LITERAL = 46
	VLangLexerBOOL_LITERAL   = 47
	VLangLexerNIL_LITERAL    = 48
	VLangLexerID             = 49
	VLangLexerWS             = 50
	VLangLexerLINE_COMMENT   = 51
	VLangLexerBLOCK_COMMENT  = 52
)
