// Code generated from grammar/VLangLexer.g4 by ANTLR 4.13.2. DO NOT EDIT.

package compiler

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type VLangLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var VLangLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func vlanglexerLexerInit() {
	staticData := &VLangLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'mut'", "'func'", "'struct'", "'slice'", "'if'", "'else'", "'switch'",
		"'case'", "'default'", "'for'", "'while'", "'in'", "'break'", "'continue'",
		"'return'", "'+'", "'-'", "'*'", "'/'", "'%'", "'='", "'+='", "'-='",
		"'=='", "'!='", "'<'", "'<='", "'>'", "'>='", "'&&'", "'||'", "'!'",
		"'('", "')'", "'{'", "'}'", "'['", "']'", "';'", "':'", "'.'", "','",
		"'\\n'", "", "", "", "", "'nil'",
	}
	staticData.SymbolicNames = []string{
		"", "MUT", "FUNC", "STR", "SLICE_TYPE", "IF_KW", "ELSE_KW", "SWITCH_KW",
		"CASE_KW", "DEFAULT_KW", "FOR_KW", "WHILE_KW", "IN_KW", "BREAK_KW",
		"CONTINUE_KW", "RETURN_KW", "PLUS", "MINUS", "MULT", "DIV", "MOD", "ASSIGN",
		"PLUS_ASSIGN", "MINUS_ASSIGN", "EQ", "NE", "LT", "LE", "GT", "GE", "AND",
		"OR", "NOT", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACK", "RBRACK",
		"SEMI", "COLON", "DOT", "COMMA", "NEWLINE", "INT_LITERAL", "FLOAT_LITERAL",
		"STRING_LITERAL", "BOOL_LITERAL", "NIL_LITERAL", "ID", "LINE_COMMENT",
		"BLOCK_COMMENT", "WS",
	}
	staticData.RuleNames = []string{
		"MUT", "FUNC", "STR", "SLICE_TYPE", "IF_KW", "ELSE_KW", "SWITCH_KW",
		"CASE_KW", "DEFAULT_KW", "FOR_KW", "WHILE_KW", "IN_KW", "BREAK_KW",
		"CONTINUE_KW", "RETURN_KW", "PLUS", "MINUS", "MULT", "DIV", "MOD", "ASSIGN",
		"PLUS_ASSIGN", "MINUS_ASSIGN", "EQ", "NE", "LT", "LE", "GT", "GE", "AND",
		"OR", "NOT", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACK", "RBRACK",
		"SEMI", "COLON", "DOT", "COMMA", "NEWLINE", "DIGIT", "LETTER", "UNDERSCORE",
		"INT_LITERAL", "FLOAT_LITERAL", "STRING_LITERAL", "BOOL_LITERAL", "NIL_LITERAL",
		"ID", "ESC_SEQ", "LINE_COMMENT", "BLOCK_COMMENT", "WS",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 52, 359, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 1, 0, 1, 0, 1, 0,
		1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
		1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5,
		1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7,
		1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9,
		1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11,
		1, 11, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1,
		13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14,
		1, 14, 1, 14, 1, 15, 1, 15, 1, 16, 1, 16, 1, 17, 1, 17, 1, 18, 1, 18, 1,
		19, 1, 19, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 23,
		1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1,
		27, 1, 27, 1, 28, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 30,
		1, 31, 1, 31, 1, 32, 1, 32, 1, 33, 1, 33, 1, 34, 1, 34, 1, 35, 1, 35, 1,
		36, 1, 36, 1, 37, 1, 37, 1, 38, 1, 38, 1, 39, 1, 39, 1, 40, 1, 40, 1, 41,
		1, 41, 1, 42, 1, 42, 1, 43, 1, 43, 1, 44, 1, 44, 1, 45, 1, 45, 1, 46, 4,
		46, 270, 8, 46, 11, 46, 12, 46, 271, 1, 47, 4, 47, 275, 8, 47, 11, 47,
		12, 47, 276, 1, 47, 1, 47, 4, 47, 281, 8, 47, 11, 47, 12, 47, 282, 1, 48,
		1, 48, 1, 48, 5, 48, 288, 8, 48, 10, 48, 12, 48, 291, 9, 48, 1, 48, 1,
		48, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 3, 49,
		304, 8, 49, 1, 50, 1, 50, 1, 50, 1, 50, 1, 51, 1, 51, 3, 51, 312, 8, 51,
		1, 51, 1, 51, 1, 51, 5, 51, 317, 8, 51, 10, 51, 12, 51, 320, 9, 51, 1,
		52, 1, 52, 1, 52, 1, 53, 1, 53, 1, 53, 1, 53, 5, 53, 329, 8, 53, 10, 53,
		12, 53, 332, 9, 53, 1, 53, 3, 53, 335, 8, 53, 1, 53, 1, 53, 1, 54, 1, 54,
		1, 54, 1, 54, 5, 54, 343, 8, 54, 10, 54, 12, 54, 346, 9, 54, 1, 54, 1,
		54, 1, 54, 1, 54, 1, 54, 1, 55, 4, 55, 354, 8, 55, 11, 55, 12, 55, 355,
		1, 55, 1, 55, 2, 330, 344, 0, 56, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6,
		13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31,
		16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49,
		25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67,
		34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41, 83, 42, 85,
		43, 87, 0, 89, 0, 91, 0, 93, 44, 95, 45, 97, 46, 99, 47, 101, 48, 103,
		49, 105, 0, 107, 50, 109, 51, 111, 52, 1, 0, 6, 1, 0, 48, 57, 2, 0, 65,
		90, 97, 122, 4, 0, 10, 10, 13, 13, 34, 34, 92, 92, 8, 0, 34, 34, 39, 39,
		92, 92, 98, 98, 102, 102, 110, 110, 114, 114, 116, 116, 1, 1, 10, 10, 3,
		0, 9, 9, 13, 13, 32, 32, 367, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5,
		1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13,
		1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0,
		21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0,
		0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0,
		0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0,
		0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1,
		0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59,
		1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0,
		67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0,
		0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0,
		0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0,
		0, 0, 0, 97, 1, 0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101, 1, 0, 0, 0, 0, 103,
		1, 0, 0, 0, 0, 107, 1, 0, 0, 0, 0, 109, 1, 0, 0, 0, 0, 111, 1, 0, 0, 0,
		1, 113, 1, 0, 0, 0, 3, 117, 1, 0, 0, 0, 5, 122, 1, 0, 0, 0, 7, 129, 1,
		0, 0, 0, 9, 135, 1, 0, 0, 0, 11, 138, 1, 0, 0, 0, 13, 143, 1, 0, 0, 0,
		15, 150, 1, 0, 0, 0, 17, 155, 1, 0, 0, 0, 19, 163, 1, 0, 0, 0, 21, 167,
		1, 0, 0, 0, 23, 173, 1, 0, 0, 0, 25, 176, 1, 0, 0, 0, 27, 182, 1, 0, 0,
		0, 29, 191, 1, 0, 0, 0, 31, 198, 1, 0, 0, 0, 33, 200, 1, 0, 0, 0, 35, 202,
		1, 0, 0, 0, 37, 204, 1, 0, 0, 0, 39, 206, 1, 0, 0, 0, 41, 208, 1, 0, 0,
		0, 43, 210, 1, 0, 0, 0, 45, 213, 1, 0, 0, 0, 47, 216, 1, 0, 0, 0, 49, 219,
		1, 0, 0, 0, 51, 222, 1, 0, 0, 0, 53, 224, 1, 0, 0, 0, 55, 227, 1, 0, 0,
		0, 57, 229, 1, 0, 0, 0, 59, 232, 1, 0, 0, 0, 61, 235, 1, 0, 0, 0, 63, 238,
		1, 0, 0, 0, 65, 240, 1, 0, 0, 0, 67, 242, 1, 0, 0, 0, 69, 244, 1, 0, 0,
		0, 71, 246, 1, 0, 0, 0, 73, 248, 1, 0, 0, 0, 75, 250, 1, 0, 0, 0, 77, 252,
		1, 0, 0, 0, 79, 254, 1, 0, 0, 0, 81, 256, 1, 0, 0, 0, 83, 258, 1, 0, 0,
		0, 85, 260, 1, 0, 0, 0, 87, 262, 1, 0, 0, 0, 89, 264, 1, 0, 0, 0, 91, 266,
		1, 0, 0, 0, 93, 269, 1, 0, 0, 0, 95, 274, 1, 0, 0, 0, 97, 284, 1, 0, 0,
		0, 99, 303, 1, 0, 0, 0, 101, 305, 1, 0, 0, 0, 103, 311, 1, 0, 0, 0, 105,
		321, 1, 0, 0, 0, 107, 324, 1, 0, 0, 0, 109, 338, 1, 0, 0, 0, 111, 353,
		1, 0, 0, 0, 113, 114, 5, 109, 0, 0, 114, 115, 5, 117, 0, 0, 115, 116, 5,
		116, 0, 0, 116, 2, 1, 0, 0, 0, 117, 118, 5, 102, 0, 0, 118, 119, 5, 117,
		0, 0, 119, 120, 5, 110, 0, 0, 120, 121, 5, 99, 0, 0, 121, 4, 1, 0, 0, 0,
		122, 123, 5, 115, 0, 0, 123, 124, 5, 116, 0, 0, 124, 125, 5, 114, 0, 0,
		125, 126, 5, 117, 0, 0, 126, 127, 5, 99, 0, 0, 127, 128, 5, 116, 0, 0,
		128, 6, 1, 0, 0, 0, 129, 130, 5, 115, 0, 0, 130, 131, 5, 108, 0, 0, 131,
		132, 5, 105, 0, 0, 132, 133, 5, 99, 0, 0, 133, 134, 5, 101, 0, 0, 134,
		8, 1, 0, 0, 0, 135, 136, 5, 105, 0, 0, 136, 137, 5, 102, 0, 0, 137, 10,
		1, 0, 0, 0, 138, 139, 5, 101, 0, 0, 139, 140, 5, 108, 0, 0, 140, 141, 5,
		115, 0, 0, 141, 142, 5, 101, 0, 0, 142, 12, 1, 0, 0, 0, 143, 144, 5, 115,
		0, 0, 144, 145, 5, 119, 0, 0, 145, 146, 5, 105, 0, 0, 146, 147, 5, 116,
		0, 0, 147, 148, 5, 99, 0, 0, 148, 149, 5, 104, 0, 0, 149, 14, 1, 0, 0,
		0, 150, 151, 5, 99, 0, 0, 151, 152, 5, 97, 0, 0, 152, 153, 5, 115, 0, 0,
		153, 154, 5, 101, 0, 0, 154, 16, 1, 0, 0, 0, 155, 156, 5, 100, 0, 0, 156,
		157, 5, 101, 0, 0, 157, 158, 5, 102, 0, 0, 158, 159, 5, 97, 0, 0, 159,
		160, 5, 117, 0, 0, 160, 161, 5, 108, 0, 0, 161, 162, 5, 116, 0, 0, 162,
		18, 1, 0, 0, 0, 163, 164, 5, 102, 0, 0, 164, 165, 5, 111, 0, 0, 165, 166,
		5, 114, 0, 0, 166, 20, 1, 0, 0, 0, 167, 168, 5, 119, 0, 0, 168, 169, 5,
		104, 0, 0, 169, 170, 5, 105, 0, 0, 170, 171, 5, 108, 0, 0, 171, 172, 5,
		101, 0, 0, 172, 22, 1, 0, 0, 0, 173, 174, 5, 105, 0, 0, 174, 175, 5, 110,
		0, 0, 175, 24, 1, 0, 0, 0, 176, 177, 5, 98, 0, 0, 177, 178, 5, 114, 0,
		0, 178, 179, 5, 101, 0, 0, 179, 180, 5, 97, 0, 0, 180, 181, 5, 107, 0,
		0, 181, 26, 1, 0, 0, 0, 182, 183, 5, 99, 0, 0, 183, 184, 5, 111, 0, 0,
		184, 185, 5, 110, 0, 0, 185, 186, 5, 116, 0, 0, 186, 187, 5, 105, 0, 0,
		187, 188, 5, 110, 0, 0, 188, 189, 5, 117, 0, 0, 189, 190, 5, 101, 0, 0,
		190, 28, 1, 0, 0, 0, 191, 192, 5, 114, 0, 0, 192, 193, 5, 101, 0, 0, 193,
		194, 5, 116, 0, 0, 194, 195, 5, 117, 0, 0, 195, 196, 5, 114, 0, 0, 196,
		197, 5, 110, 0, 0, 197, 30, 1, 0, 0, 0, 198, 199, 5, 43, 0, 0, 199, 32,
		1, 0, 0, 0, 200, 201, 5, 45, 0, 0, 201, 34, 1, 0, 0, 0, 202, 203, 5, 42,
		0, 0, 203, 36, 1, 0, 0, 0, 204, 205, 5, 47, 0, 0, 205, 38, 1, 0, 0, 0,
		206, 207, 5, 37, 0, 0, 207, 40, 1, 0, 0, 0, 208, 209, 5, 61, 0, 0, 209,
		42, 1, 0, 0, 0, 210, 211, 5, 43, 0, 0, 211, 212, 5, 61, 0, 0, 212, 44,
		1, 0, 0, 0, 213, 214, 5, 45, 0, 0, 214, 215, 5, 61, 0, 0, 215, 46, 1, 0,
		0, 0, 216, 217, 5, 61, 0, 0, 217, 218, 5, 61, 0, 0, 218, 48, 1, 0, 0, 0,
		219, 220, 5, 33, 0, 0, 220, 221, 5, 61, 0, 0, 221, 50, 1, 0, 0, 0, 222,
		223, 5, 60, 0, 0, 223, 52, 1, 0, 0, 0, 224, 225, 5, 60, 0, 0, 225, 226,
		5, 61, 0, 0, 226, 54, 1, 0, 0, 0, 227, 228, 5, 62, 0, 0, 228, 56, 1, 0,
		0, 0, 229, 230, 5, 62, 0, 0, 230, 231, 5, 61, 0, 0, 231, 58, 1, 0, 0, 0,
		232, 233, 5, 38, 0, 0, 233, 234, 5, 38, 0, 0, 234, 60, 1, 0, 0, 0, 235,
		236, 5, 124, 0, 0, 236, 237, 5, 124, 0, 0, 237, 62, 1, 0, 0, 0, 238, 239,
		5, 33, 0, 0, 239, 64, 1, 0, 0, 0, 240, 241, 5, 40, 0, 0, 241, 66, 1, 0,
		0, 0, 242, 243, 5, 41, 0, 0, 243, 68, 1, 0, 0, 0, 244, 245, 5, 123, 0,
		0, 245, 70, 1, 0, 0, 0, 246, 247, 5, 125, 0, 0, 247, 72, 1, 0, 0, 0, 248,
		249, 5, 91, 0, 0, 249, 74, 1, 0, 0, 0, 250, 251, 5, 93, 0, 0, 251, 76,
		1, 0, 0, 0, 252, 253, 5, 59, 0, 0, 253, 78, 1, 0, 0, 0, 254, 255, 5, 58,
		0, 0, 255, 80, 1, 0, 0, 0, 256, 257, 5, 46, 0, 0, 257, 82, 1, 0, 0, 0,
		258, 259, 5, 44, 0, 0, 259, 84, 1, 0, 0, 0, 260, 261, 5, 10, 0, 0, 261,
		86, 1, 0, 0, 0, 262, 263, 7, 0, 0, 0, 263, 88, 1, 0, 0, 0, 264, 265, 7,
		1, 0, 0, 265, 90, 1, 0, 0, 0, 266, 267, 5, 95, 0, 0, 267, 92, 1, 0, 0,
		0, 268, 270, 3, 87, 43, 0, 269, 268, 1, 0, 0, 0, 270, 271, 1, 0, 0, 0,
		271, 269, 1, 0, 0, 0, 271, 272, 1, 0, 0, 0, 272, 94, 1, 0, 0, 0, 273, 275,
		3, 87, 43, 0, 274, 273, 1, 0, 0, 0, 275, 276, 1, 0, 0, 0, 276, 274, 1,
		0, 0, 0, 276, 277, 1, 0, 0, 0, 277, 278, 1, 0, 0, 0, 278, 280, 5, 46, 0,
		0, 279, 281, 3, 87, 43, 0, 280, 279, 1, 0, 0, 0, 281, 282, 1, 0, 0, 0,
		282, 280, 1, 0, 0, 0, 282, 283, 1, 0, 0, 0, 283, 96, 1, 0, 0, 0, 284, 289,
		5, 34, 0, 0, 285, 288, 8, 2, 0, 0, 286, 288, 3, 105, 52, 0, 287, 285, 1,
		0, 0, 0, 287, 286, 1, 0, 0, 0, 288, 291, 1, 0, 0, 0, 289, 287, 1, 0, 0,
		0, 289, 290, 1, 0, 0, 0, 290, 292, 1, 0, 0, 0, 291, 289, 1, 0, 0, 0, 292,
		293, 5, 34, 0, 0, 293, 98, 1, 0, 0, 0, 294, 295, 5, 116, 0, 0, 295, 296,
		5, 114, 0, 0, 296, 297, 5, 117, 0, 0, 297, 304, 5, 101, 0, 0, 298, 299,
		5, 102, 0, 0, 299, 300, 5, 97, 0, 0, 300, 301, 5, 108, 0, 0, 301, 302,
		5, 115, 0, 0, 302, 304, 5, 101, 0, 0, 303, 294, 1, 0, 0, 0, 303, 298, 1,
		0, 0, 0, 304, 100, 1, 0, 0, 0, 305, 306, 5, 110, 0, 0, 306, 307, 5, 105,
		0, 0, 307, 308, 5, 108, 0, 0, 308, 102, 1, 0, 0, 0, 309, 312, 3, 89, 44,
		0, 310, 312, 3, 91, 45, 0, 311, 309, 1, 0, 0, 0, 311, 310, 1, 0, 0, 0,
		312, 318, 1, 0, 0, 0, 313, 317, 3, 89, 44, 0, 314, 317, 3, 87, 43, 0, 315,
		317, 3, 91, 45, 0, 316, 313, 1, 0, 0, 0, 316, 314, 1, 0, 0, 0, 316, 315,
		1, 0, 0, 0, 317, 320, 1, 0, 0, 0, 318, 316, 1, 0, 0, 0, 318, 319, 1, 0,
		0, 0, 319, 104, 1, 0, 0, 0, 320, 318, 1, 0, 0, 0, 321, 322, 5, 92, 0, 0,
		322, 323, 7, 3, 0, 0, 323, 106, 1, 0, 0, 0, 324, 325, 5, 47, 0, 0, 325,
		326, 5, 47, 0, 0, 326, 330, 1, 0, 0, 0, 327, 329, 9, 0, 0, 0, 328, 327,
		1, 0, 0, 0, 329, 332, 1, 0, 0, 0, 330, 331, 1, 0, 0, 0, 330, 328, 1, 0,
		0, 0, 331, 334, 1, 0, 0, 0, 332, 330, 1, 0, 0, 0, 333, 335, 7, 4, 0, 0,
		334, 333, 1, 0, 0, 0, 335, 336, 1, 0, 0, 0, 336, 337, 6, 53, 0, 0, 337,
		108, 1, 0, 0, 0, 338, 339, 5, 47, 0, 0, 339, 340, 5, 42, 0, 0, 340, 344,
		1, 0, 0, 0, 341, 343, 9, 0, 0, 0, 342, 341, 1, 0, 0, 0, 343, 346, 1, 0,
		0, 0, 344, 345, 1, 0, 0, 0, 344, 342, 1, 0, 0, 0, 345, 347, 1, 0, 0, 0,
		346, 344, 1, 0, 0, 0, 347, 348, 5, 42, 0, 0, 348, 349, 5, 47, 0, 0, 349,
		350, 1, 0, 0, 0, 350, 351, 6, 54, 0, 0, 351, 110, 1, 0, 0, 0, 352, 354,
		7, 5, 0, 0, 353, 352, 1, 0, 0, 0, 354, 355, 1, 0, 0, 0, 355, 353, 1, 0,
		0, 0, 355, 356, 1, 0, 0, 0, 356, 357, 1, 0, 0, 0, 357, 358, 6, 55, 0, 0,
		358, 112, 1, 0, 0, 0, 14, 0, 271, 276, 282, 287, 289, 303, 311, 316, 318,
		330, 334, 344, 355, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// VLangLexerInit initializes any static state used to implement VLangLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewVLangLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func VLangLexerInit() {
	staticData := &VLangLexerLexerStaticData
	staticData.once.Do(vlanglexerLexerInit)
}

// NewVLangLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewVLangLexer(input antlr.CharStream) *VLangLexer {
	VLangLexerInit()
	l := new(VLangLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &VLangLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "VLangLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// VLangLexer tokens.
const (
	VLangLexerMUT            = 1
	VLangLexerFUNC           = 2
	VLangLexerSTR            = 3
	VLangLexerSLICE_TYPE     = 4
	VLangLexerIF_KW          = 5
	VLangLexerELSE_KW        = 6
	VLangLexerSWITCH_KW      = 7
	VLangLexerCASE_KW        = 8
	VLangLexerDEFAULT_KW     = 9
	VLangLexerFOR_KW         = 10
	VLangLexerWHILE_KW       = 11
	VLangLexerIN_KW          = 12
	VLangLexerBREAK_KW       = 13
	VLangLexerCONTINUE_KW    = 14
	VLangLexerRETURN_KW      = 15
	VLangLexerPLUS           = 16
	VLangLexerMINUS          = 17
	VLangLexerMULT           = 18
	VLangLexerDIV            = 19
	VLangLexerMOD            = 20
	VLangLexerASSIGN         = 21
	VLangLexerPLUS_ASSIGN    = 22
	VLangLexerMINUS_ASSIGN   = 23
	VLangLexerEQ             = 24
	VLangLexerNE             = 25
	VLangLexerLT             = 26
	VLangLexerLE             = 27
	VLangLexerGT             = 28
	VLangLexerGE             = 29
	VLangLexerAND            = 30
	VLangLexerOR             = 31
	VLangLexerNOT            = 32
	VLangLexerLPAREN         = 33
	VLangLexerRPAREN         = 34
	VLangLexerLBRACE         = 35
	VLangLexerRBRACE         = 36
	VLangLexerLBRACK         = 37
	VLangLexerRBRACK         = 38
	VLangLexerSEMI           = 39
	VLangLexerCOLON          = 40
	VLangLexerDOT            = 41
	VLangLexerCOMMA          = 42
	VLangLexerNEWLINE        = 43
	VLangLexerINT_LITERAL    = 44
	VLangLexerFLOAT_LITERAL  = 45
	VLangLexerSTRING_LITERAL = 46
	VLangLexerBOOL_LITERAL   = 47
	VLangLexerNIL_LITERAL    = 48
	VLangLexerID             = 49
	VLangLexerLINE_COMMENT   = 50
	VLangLexerBLOCK_COMMENT  = 51
	VLangLexerWS             = 52
)
